name: Slash Command Dispatch
on:
  issue_comment:
    types: [created]

jobs:
  check_comments:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/land') }}
    runs-on: ubuntu-latest
    steps:
      - name: Show Environment Variables
        run: env
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Show Github Object
        run: |
          cat <<'EOF'
          ${{ toJson(github) }}
          EOF
      - name: Show Github Event Path Json
        run: 'cat $GITHUB_EVENT_PATH || true'
      - name: Get PR details
        id: get-pr
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          echo "PR number is $PR_NUMBER"
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          
          # Get PR details using GitHub API
          PR_DATA=$(curl -s \
            -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "${{ github.api_url }}/repos/${{ github.repository }}/pulls/$PR_NUMBER")
          
          # Extract useful information
          PR_HEAD_REF=$(echo "$PR_DATA" | jq -r .head.ref)
          PR_HEAD_SHA=$(echo "$PR_DATA" | jq -r .head.sha)
          
          echo "pr_branch=$PR_HEAD_REF" >> $GITHUB_OUTPUT
          echo "pr_sha=$PR_HEAD_SHA" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          fetch-depth: '0'
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          
      - name: Check Current CI Status
        run: |
          pip install requests ghstack
          echo ${{ github.event.issue.number }}
          .github/workflows/scripts/ghstack-perm-check.py ${{ github.event.issue.number }} <<'EOF'
          ${{ toJson(github) }}
          EOF
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Land It!
        run: |
          git config --global user.email "horace@thinkingmachines.ai"
          git config --global user.name "ghstack bot"
          cat <<EOF > ~/.ghstackrc
          [ghstack]
          github_url = github.com
          github_oauth = $GITHUB_TOKEN
          github_username = chillee
          remote_name = origin
          EOF
          ghstack land "${{ github.event.client_payload.pull_request.html_url }}"
        env:
          GITHUB_TOKEN: $${{ steps.app-token.outputs.token }}

      # - uses: actions/create-github-app-token@v1
      #   id: app-token
      #   with:
      #     app-id: ${{ vars.APP_ID }}
      #     private-key: ${{ secrets.PRIVATE_KEY }}
      # - name: Slash Command Dispatch - Repo - Write
      #   uses: peter-evans/slash-command-dispatch@v3
      #   with:
      #     token: $${{ steps.app-token.outputs.token }}
      #     # reaction-token: $${{ steps.app-token.outputs.token }}
      #     issue-type: pull-request
      #     permission: write
      #     commands: |
      #       land
